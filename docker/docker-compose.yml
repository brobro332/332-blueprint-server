services:
  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: always
    ports:
      - "${MONGODB_EXTERNAL_PORT}:${MONGODB_INTERNAL_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATA_MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATA_MONGODB_PASSWORD}
    volumes:
      - mongo-data:/data/db
    env_file:
      - .env

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "${MONGO_EXPRESS_EXTERNAL_PORT}:${MONGO_EXPRESS_INTERNAL_PORT}"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATA_MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATA_MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${DATA_MONGODB_DATABASE}
      ME_CONFIG_BASICAUTH: "false"
    env_file:
      - .env

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_INTERNAL_PORT}"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    env_file:
      - .env

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:${REDIS_EXTERNAL_PORT}
    ports:
      - "${REDIS_COMMANDER_EXTERNAL_PORT}:${REDIS_COMMANDER_INTERNAL_PORT}"
    depends_on:
      - redis
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_EXTERNAL_PORT_1}:${RABBITMQ_INTERNAL_PORT_1}"
      - "${RABBITMQ_EXTERNAL_PORT_2}:${RABBITMQ_INTERNAL_PORT_2}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    env_file:
      - .env

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "${KAFKA_EXTERNAL_PORT}:${KAFKA_INTERNAL_PORT}"
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:${KAFKA_EXTERNAL_PORT},CONTROLLER://:${KAFKA_KRAFT_CONTROLLER_PORT}
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${KAFKA_EXTERNAL_PORT}
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@localhost:${KAFKA_KRAFT_CONTROLLER_PORT}"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    env_file:
      - .env

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "${ZOOKEEPER_EXTERNAL_PORT}:${ZOOKEEPER_INTERNAL_PORT}"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    env_file:
      - .env

volumes:
  mongo-data:
  redis-data: